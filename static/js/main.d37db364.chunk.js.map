{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","todoClass","classNames","TodoList","todos","map","getUser","usersFromServer","find","getTodos","todosFromServer","App","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","newTodoId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","Number","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d37db364.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  const todoClass = classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': completed },\n  );\n\n  return (\n    <article data-id={id} className={todoClass}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const getTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(getTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const newTodoId: number = Math.max(\n    ...todosFromServer.map(todo => todo.id),\n  ) + 1;\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId || !title) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: newTodoId,\n      completed: false,\n      user: getUser(Number(userId)),\n      title: title.trim(),\n      userId: Number(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  const changeTitle = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTitleError(false);\n    setTitle(event.target.value);\n  };\n\n  const changeUser = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setUserError(false);\n    setUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={changeTitle}\n            />\n          </label>\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={changeUser}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => ((\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              )))}\n            </select>\n          </label>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}