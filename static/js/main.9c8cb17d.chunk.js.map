{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","todoClass","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","getTodos","getNewTodoId","todoIds","maxId","Math","max","Number","isFinite","App","useState","setTodos","setTitle","setUserId","isTitleValid","setIsTitleValid","isUserValid","setIsUserValid","action","method","onSubmit","event","preventDefault","newTodo","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c8cb17d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  const todoClass = classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': completed },\n  );\n\n  return (\n    <article data-id={id} className={todoClass}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const getTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getNewTodoId = (todos: Todo[]) => {\n  const todoIds = todos.map(todo => todo.id);\n  const maxId = Math.max(...todoIds);\n\n  return Number.isFinite(maxId)\n    ? maxId + 1\n    : 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(getTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleValid, setIsTitleValid] = useState(false);\n  const [isUserValid, setIsUserValid] = useState(false);\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsUserValid(true);\n    }\n\n    if (!title) {\n      setIsTitleValid(true);\n    }\n\n    if (!userId || !title) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getNewTodoId(todos),\n      completed: false,\n      user: getUserById(Number(userId)),\n      title: title.trim(),\n      userId: Number(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  const changeTitle = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setIsTitleValid(false);\n    setTitle(event.target.value);\n  };\n\n  const changeUser = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setIsUserValid(false);\n    setUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={changeTitle}\n            />\n          </label>\n\n          {isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={changeUser}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => ((\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              )))}\n            </select>\n          </label>\n\n          {isUserValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}